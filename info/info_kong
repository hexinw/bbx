# Refer to this website for detail example walk through: https://www.jerney.io/secure-apis-kong-keycloak-1/
#
# Verify OIDC plugin is available on Kong.
curl -s http://kong-control.kong.svc:8001  | jq .plugins.available_on_server.oidc

# Create a mock service.
curl -s -X POST http://kong-control.kong.svc:8001/services -d name=mock-service -d url=http://mockbin.org/request | python3 -mjson.tool

# Create a mock route. Use the 'id' value from previous output as <service_id>
curl -s -X POST http://kong-control.kong.svc:8001/routes -d service.id=<service_id> -d paths[]=/mock  | python3 -mjson.tool

# Verify everything up correctly.
curl -s http://kong-ingress.kong.svc:8000/mock

http://35.81.121.126:30008/auth/realms/master/.well-known/openid-configuration

# Go to Keycloak admin console to setup 'kong' client.

# Configure the OIDC plugin on Kong
#kubectl exec -it keycloak-7d74c74948-8xk2q -- curl -s -X POST http://kong-control.kong.svc:8001/plugins -d name=oidc -d config.client_id=kong -d config.client_secret=f07816d5-e6cd-47b0-8c8b-cc56549b23a1 -d config.discovery=http://keycloak.default.svc.cluster.local:8080/auth/realms/master/.well-known/openid-configuration | python3 -mjson.tool

kubectl exec -it keycloak-7d74c74948-8xk2q -- curl -s -X POST http://kong-control.kong:8001/plugins -d name=oidc -d config.client_id=kong -d config.client_secret=f07816d5-e6cd-47b0-8c8b-cc56549b23a1 -d config.discovery=https://auth.ubyon.com/auth/realms/master/.well-known/openid-configuration | python3 -mjson.tool

# Setup ssh port forward to kong
ssh -fNT -4 -i ~/.ssh/core-aws.pem ubuntu@35.81.121.126 -L 30080:localhost:30080

# Keycloak client:
# test
# Ubyon1@3$

# Add a service and routes through Kong admin API.
curl -i -X POST --url http://kong-control.kong.svc:8001/services --data 'name=nginx-hello'  --data 'url=http://nginx.default.svc:8080'
#curl -i -X POST --url http://kong-control.kong.svc:8001/services/nginx-hello/routes  --data 'hosts[]=nginx.testing'
#curl -i -X GET  --url http://kong-ingress.kong.svc:8000 --header 'Host: nginx.testing'
curl -i -X POST --url http://kong-control.kong.svc:8001/services/nginx-hello/routes  --data 'paths[]=/nginx'
curl -i -X GET  --url http://kong-ingress.kong.svc:8000/nginx

# Update OIDC plugin to associate with mock service.
curl -s -X PATCH --url http://kong-control.kong.svc:8001/plugins/aca446c8-9923-4ff0-b7cd-951a317981c9 --data 'service.id=e5b887a5-1339-4f3f-bc5e-17b076bfc10f'

# Install let's encrypt certificate via kong-acme plugin.
curl http://kong-control.kong:8001/services -d name=acme-dummy -d url=http://127.0.0.1:65535
curl http://kong-control.kong:8001/routes -d name=acme-dummy -d paths[]=/.well-known/acme-challenge -d service.name=acme-dummy
curl http://kong-control.kong:8001/plugins -d name=acme -d config.account_email=it-admin@ubyon.com -d config.tos_accepted=true -d config.domains[]=access.ubyon.com -d config.domains[]=manage.ubyon.com

# Trigger let's encrypt to generate certificate for 'access.ubyon.com'
curl http://kong-control.kong:8001/acme -d host=access.ubyon.com
# Trigger let's encrypt to generate certificate for 'manage.ubyon.com'
curl http://kong-control.kong:8001/acme -d host=manage.ubyon.com
