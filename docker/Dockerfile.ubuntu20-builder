# Docker file to generate a ubuntu 20.04 based image plus a varieties of
# tools/dependencies.
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /var/tmp
RUN \
  apt-get update -y && \
  apt-get install -y libgflags-dev libgtest-dev clang-10 libc++-dev \
      build-essential autoconf automake libtool curl pkg-config make \
      g++ unzip dh-make dh-python vim \
      wget zlib1g-dev cmake git ccache libssl-dev xmlto net-tools iproute2 \
      iputils-ping libpkcs11-helper1 \
      libgflags2.2 liblzo2-2 liblzo2-dev libpam0g-dev liblz4-dev \
      uml-utilities python3-pip libboost-dev cython libjsoncpp-dev \
      libboost-filesystem1.71-dev libboost-filesystem1.71.0 libboost-system1.71-dev \
      libboost-system1.71.0 iptables tcpdump traceroute \
      libzookeeper-mt2 libzookeeper-mt-dev gdb
RUN \
  pip3 install pytest==6.1.0 grpcio-tools==1.32.0 grpcio==1.32.0 python-dateutil==2.8.1 \
      protobuf==3.13.0 dpath==2.0.1 swagger_py_codegen==0.4.0 \
      gevent==20.9.0 python-gflags==3.1.2 werkzeug==1.0.1 websocket==0.2.1 \
      websocket_client==0.57.0 py-dateutil==2.2 pyuwsgi==2.0.19.1 netaddr==0.8.0 \
      flask==1.1.2 Flask-INIConfig==0.1.0 setuptools==50.3.0

RUN \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgoogle-glog0_0.4.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgoogle-glog-dev_0.4.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgrpc7_1.24.0-0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgrpc-dev_1.24.0-0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgrpc%2B%2B1_1.24.0-0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgrpc%2B%2B-dev_1.24.0-0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libprotobuf18_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libprotoc18_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/protobuf-compiler_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libprotobuf-lite18_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libprotobuf-dev_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libprotoc-dev_3.8.0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/protobuf-compiler-grpc_1.24.0-0_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libcityhash_0.0.0-1_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgperftools0_2.7_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://github.com/hexinw/pkgs/raw/master/libgperftools-dev_2.7_amd64.deb' && \
  dpkg -i "$TEMP_DEB" && \
  rm -f "$TEMP_DEB" && \
  TEMP_DEB="$(mktemp)" && \
  wget -O "$TEMP_DEB" 'https://golang.org/dl/go1.15.2.linux-amd64.tar.gz' && \
  tar -C /usr/local/ -xzf "$TEMP_DEB" && \
  rm -f "$TEMP_DEB"

ENV PATH=$PATH:/usr/local/go/bin:/root/go/bin

RUN \
  go version && \
  go get github.com/fullstorydev/grpcurl/... && \
  go install github.com/fullstorydev/grpcurl/cmd/grpcurl
